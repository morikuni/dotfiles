
if has("vim_starting")
  set runtimepath+=~/.vim/bundle/neobundle.vim
endif
call neobundle#begin(expand("~/.vim/bundle/"))
	NeoBundleFetch "Shougo/neobundle.vim"

	"ファイルブラウザ
	NeoBundle "Shougo/vimfiler"

	"カラースキーマ
	NeoBundle "tomasr/molokai"

	"ステータスバーの拡張
	NeoBundle "itchyny/lightline.vim"

	"複数行コメントアウト
	NeoBundle "tyru/caw.vim"

	"Scalaのシンタックスハイライト
	NeoBundle "derekwyatt/vim-scala"

	"カーソル移動
	NeoBundle "Lokaltog/vim-easymotion"

	"unite.vim
	NeoBundle "Shougo/unite.vim"

	"最近開いたファイルをuniteで表示
	NeoBundle "Shougo/neomru.vim"

	"vimproc.vim
	NeoBundle "Shougo/vimproc.vim", {
	\ "build" : {
	\	  "windows" : "tools\\update-dll-mingw",
	\	  "cygwin" : "make -f make_cygwin.mak",
	\	  "mac" : "make -f make_mac.mak",
	\	  "linux" : "make",
	\	  "unix" : "gmake",
	\	 },
	\ }

	"Tabで補完
	NeoBundle "ervandew/supertab"

	"undo履歴をツリー表示
	NeoBundle "sjl/gundo.vim"

	"Markdownのリアルタイムプレビュー
	NeoBundle "kannokanno/previm"

	"ヤンク履歴をさかのぼってペースト
	NeoBundle "LeafCage/yankround.vim"

	"trailを赤色表示"
	NeoBundle "bronson/vim-trailing-whitespace"

	"tagを一覧表示
	NeoBundle "majutsushi/tagbar"

call neobundle#end()

filetype plugin indent on
NeoBundleCheck

"----------
" vimfiler
"----------
let g:vimfiler_as_default_explorer = 1
let g:vimfiler_tree_leaf_icon = " "
let g:vimfiler_tree_opened_icon = "▾"
let g:vimfiler_tree_closed_icon = "▸"
let g:vimfiler_file_icon = "-"
let g:vimfiler_marked_file_icon = "*"
nnoremap <C-e> :VimFiler -toggle<CR>
autocmd FileType vimfiler nmap <buffer> <Right>  <Plug>(vimfiler_smart_l)
autocmd FileType vimfiler nmap <buffer> <Left> <Plug>(vimfiler_smart_h)

"----------
" molokai
"----------
colorscheme molokai



"----------
" lightline
"----------
set laststatus=2
let g:lightline = {
	\ "active": {
	\	"left": [ [ "mode" ], [ "filename" ] ],
	\	"right": [ [ "lineinfo" ], [ "fileinfo" ] ] 
	\ },
	\ "inactive": {
	\	"left": [ ["filename"] ],
	\	"right": []
	\ },
	\"component_function": {
	\	"mode": "MyMode",
	\	"filename": "MyFileName",
	\	"fileinfo": "MyFileInfo",
	\	"lineinfo": "MyLineInfo",
	\ }
\ }

function! MyMode()
	let l:ps = ""
	if &paste
		let l:ps = " | P"
	endif
	let l:ro = ""
	if &ro
		let l:ro = " | RO"
	endif
	let l:mod = ""
	if &modified
		let l:mod = " | +"
	endif
	if !&modifiable
		let l:mod = " | -"
	endif
		return lightline#mode() . l:ps . l:ro . l:mod
endfunction

function! MyFileName()
	let l:fns = expand("%:t")
	let l:fnl = expand("%")
	return winwidth(".") >=
		\   strlen(l:fnl)
		\ + strlen(MyMode())
		\ + 35
		\ ? l:fnl : l:fns
endfunction

function! MyFileInfo()
	let l:ff = &fileformat
	let l:fe = (strlen(&fenc) ? &fenc : &enc)
	let l:ft = (strlen(&filetype) ? &filetype : "no")
	let l:fi = l:ff . " " . l:fe . " " . l:ft
	return winwidth(".") >=
		\   strlen(MyMode()) + 2
		\ + strlen(MyFileName()) + 2
		\ + strlen(l:fi) + 2
		\ ? l:fi : ""
endfunction

function! MyLineInfo()
	let l:cl = line(".")
	let l:ll = line("$")
	let l:li = printf("%4d/%d", l:cl, l:ll)
	return winwidth(".") >=
		\   strlen(MyMode()) + 2
		\ + strlen(MyFileName()) + 2
		\ + strlen(MyFileInfo()) + 2
		\ + strlen(l:li) + 2
		\ ? l:li : ""
endfunction

"----------
" caw.vim
"----------
map ,, <Plug>(caw:i:toggle)


"----------
" EasyMotion
"----------
"デフォルトのショートカットを無効化
let g:EasyMotion_do_mapping = 0
"sキーで検索開始
map s <Plug>(easymotion-sn)
"スマートケースを使用
let g:EasyMotion_smartcase = 1


"----------
" unite.vim
"----------
let g:unite_enable_start_insert=1
nnoremap <silent> ,b :Unite buffer<CR><C-u>
nnoremap <silent> ,s :Unite grep:%<CR><C-u>
nnoremap <silent> ,r :Unite file_mru<CR><C-u>
nnoremap <silent> ,g :Unite grep:.<CR><C-u>

"Uniteのgrepにagを使う
if executable("ag")
  let g:unite_source_grep_command = "ag"
  let g:unite_source_grep_default_opts = "--nogroup --nocolor --column"
  let g:unite_source_grep_recursive_opt = ""
endif

"----------
" Gundo
"----------
nnoremap <F5> :GundoToggle<CR>
let g:gundo_close_on_revert=1



"----------
" previm
"----------
if has("mac")
	let g:previm_open_cmd = "open -a Safari"
endif



"----------
" yankround
"----------
nmap p <Plug>(yankround-p)
nmap P <Plug>(yankround-P)
nmap <C-p> <Plug>(yankround-prev)
nmap <C-n> <Plug>(yankround-next)

"----------
" vim-trailing-whitespace
"----------
let g:extra_whitespace_ignored_filetypes = ["unite"]


"----------
" supertab
"----------
let g:SuperTabDefaultCompletionType = "<c-n>"


"----------
" tagbar
"----------
nnoremap <F8> :TagbarToggle<CR>
let g:tagbar_type_scala = {
	\ 'ctagstype' : 'scala',
	\ 'sro'       : '.',
	\ 'kinds'     : [
		\ 'p:packages',
		\ 'T:types:1',
		\ 't:traits',
		\ 'o:objects',
		\ 'O:case objects',
		\ 'c:classes',
		\ 'C:case classes',
		\ 'm:methods',
		\ 'V:values:1',
		\ 'v:variables:1'
	\ ]
\ }
